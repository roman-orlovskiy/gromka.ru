import { ref } from 'vue'

export function useCamera() {
  const isStreamActive = ref(false)
  const isFlashlightOn = ref(false)
  const errorMessage = ref('')
  const isLoading = ref(false)

  let stream = null
  let track = null

  const startCamera = async () => {
    try {
      isLoading.value = true
      errorMessage.value = ''
      console.log('üé• –ó–∞–ø—É—Å–∫ –∫–∞–º–µ—Ä—ã...')

      // –ë–∞–∑–æ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∫–∞–º–µ—Ä—ã
      const constraints = {
        video: {
          facingMode: 'environment', // –ó–∞–¥–Ω—è—è –∫–∞–º–µ—Ä–∞
          width: { ideal: 1280 },
          height: { ideal: 720 }
        }
      }

      stream = await navigator.mediaDevices.getUserMedia(constraints)
      track = stream.getVideoTracks()[0]

      if (!track) {
        throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –≤–∏–¥–µ–æ —Ç—Ä–µ–∫ –≤ –ø–æ—Ç–æ–∫–µ')
      }

      isStreamActive.value = true
      console.log('‚úÖ –ö–∞–º–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞')

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä—ã:', error)
      errorMessage.value = `–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä—ã: ${error.message}`
      isStreamActive.value = false
    } finally {
      isLoading.value = false
    }
  }

  const stopCamera = () => {
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–º–µ—Ä—ã...')

    if (stream) {
      stream.getTracks().forEach(track => track.stop())
      stream = null
      track = null
      isStreamActive.value = false
      isFlashlightOn.value = false
      console.log('‚úÖ –ö–∞–º–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
    }
  }

  const toggleFlashlight = async () => {
    if (!isStreamActive.value) {
      await startCamera()
      if (!isStreamActive.value) return
    }

    try {
      console.log('üî¶ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ–Ω–∞—Ä–∏–∫–∞...')

      // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      // –í —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö –¥–æ–±–∞–≤–∏–º —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Å —Ñ–æ–Ω–∞—Ä–∏–∫–æ–º
      isFlashlightOn.value = !isFlashlightOn.value
      console.log('–§–æ–Ω–∞—Ä–∏–∫:', isFlashlightOn.value ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω')

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–Ω–∞—Ä–∏–∫–æ–º:', error)
      errorMessage.value = `–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–Ω–∞—Ä–∏–∫–æ–º: ${error.message}`
    }
  }

  return {
    isStreamActive,
    isFlashlightOn,
    errorMessage,
    isLoading,
    startCamera,
    stopCamera,
    toggleFlashlight
  }
}
